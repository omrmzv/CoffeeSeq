R1_file = '../../sample_output/blast/CT_genome/R1/medium.R1.outfmt6'
R2_file = '../../sample_output/blast/CT_genome/R2/medium.R2.outfmt6'
GA = fread(GA_file, col.names = c("taxid", "qseqid", "strand", "sseqid_R1", "pident_R1","length_R1", "mismatch_R1", "gapopen_R1", "qstart_R1",
"qend_R1", "sstart_R1", "send_R1", "evalue_R1", "bitscore_R1", "qlen_R1", "sseqid_R2", "pident_R2", "length_R2",
"mismatch_R2", "gapopen_R2", "qstart_R2", "qend_R2", "sstart_R2", "send_R2", "evalue_R2", "bitscore_R2", "qlen_R2",
"genome_len", "effective_length"))
library(data.table)
GA = fread(GA_file, col.names = c("taxid", "qseqid", "strand", "sseqid_R1", "pident_R1","length_R1", "mismatch_R1", "gapopen_R1", "qstart_R1",
"qend_R1", "sstart_R1", "send_R1", "evalue_R1", "bitscore_R1", "qlen_R1", "sseqid_R2", "pident_R2", "length_R2",
"mismatch_R2", "gapopen_R2", "qstart_R2", "qend_R2", "sstart_R2", "send_R2", "evalue_R2", "bitscore_R2", "qlen_R2",
"genome_len", "effective_length"))
taxid_file = '../../databases/GenomeDB/taxids_lengths.txt'
taxid_lengths = fread(taxid_file)
taxid_lengths$taxid<- as.character(taxid_lengths$taxid)
R1 = fread(R1_file, col.names = c('qseqid', 'sseqid_R1', 'pident_R1', 'length_R1', 'mismatch_R1', 'gapopen_R1', 'qstart_R1', 'qend_R1', 'sstart_R1', 'send_R1', 'evalue_R1', 'bitscore_R1', 'qlen_R1', 'strand', 'taxid'))
R2 = fread(R2_file, col.names = c('qseqid', 'sseqid_R2', 'pident_R2', 'length_R2', 'mismatch_R2', 'gapopen_R2', 'qstart_R2', 'qend_R2', 'sstart_R2', 'send_R2', 'evalue_R2', 'bitscore_R2', 'qlen_R2', 'strand', 'taxid'))
R1 = R1[R1$length_R1/R1$qlen_R1 >=0.9, ]
R2 = R2[R2$length_R2/R2$qlen_R2 >=0.9, ]
R1 = R1[(R1$qseqid %in% R2$qseqid), ]
R2 = R2[(R2$qseqid %in% R1$qseqid), ]
R1 = fread(R1_file, col.names = c('qseqid', 'sseqid_R1', 'pident_R1', 'length_R1', 'mismatch_R1', 'gapopen_R1', 'qstart_R1', 'qend_R1', 'sstart_R1', 'send_R1', 'evalue_R1', 'bitscore_R1', 'qlen_R1', 'strand', 'taxid'))
R2 = fread(R2_file, col.names = c('qseqid', 'sseqid_R2', 'pident_R2', 'length_R2', 'mismatch_R2', 'gapopen_R2', 'qstart_R2', 'qend_R2', 'sstart_R2', 'send_R2', 'evalue_R2', 'bitscore_R2', 'qlen_R2', 'strand', 'taxid'))
R1 = R1[R1$length_R1/R1$qlen_R1 >=0.9, ]
R2 = R2[R2$length_R2/R2$qlen_R2 >=0.9, ]
R1$qseqid = gsub("_.*", "", R1$qseqid)
R2$qseqid = gsub("_.*", "", R2$qseqid)
R1 = R1[(R1$qseqid %in% R2$qseqid), ]
R2 = R2[(R2$qseqid %in% R1$qseqid), ]
R1 = R1[(R1$evalue_R1<10**-20 & R1$bitscore_R1>100), ]
R2 = R2[(R2$evalue_R2<10**-20 & R2$bitscore_R2>100), ]
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid'))
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid'), allow.cartesian = TRUE)
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- apply(X = paired, MARGIN = 1, FUN=get_eff_len)
get_eff_len <- function(rowv){
a = as.numeric(rowv["sstart_R1"])
b = as.numeric(rowv["send_R1"])
c = as.numeric(rowv["sstart_R2"])
d = as.numeric(rowv["send_R2"])
genome_len = as.numeric(rowv["genome_len"])
lengths = sort(c(a,b,c,d))
len1 = lengths[4]-lengths[1]
len2 = genome_len - lengths[3] + lengths[2]
eff_len = min(len1, len2)
return(eff_len)
}
paired$effective_length <- apply(X = paired, MARGIN = 1, FUN=get_eff_len)
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length), ] #duplicate function will keep the first occurence, which by this definition is
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid'), allow.cartesian = TRUE)
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- apply(X = paired, MARGIN = 1, FUN=get_eff_len)
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length), ] #duplicate function will keep the first occurence, which by this definition is
View(paired)
View(paired)
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
?merge
R1_file = '../../sample_output/blast/CT_genome/R1/phix006.R1.outfmt6.gz'
R2_file = '../../sample_output/blast/CT_genome/R2/phix006.R2.outfmt6.gz'
taxid_file = '../../databases/GenomeDB/taxids_lengths.txt'
library(data.table)
start_time <- Sys.time()
get_eff_len2 <- function(a, b, c, d, e){
a = as.numeric(a)
b = as.numeric(b)
c = as.numeric(c)
d = as.numeric(d)
genome_len = as.numeric(e)
lengths = sort(c(a,b,c,d))
len1 = lengths[4]-lengths[1]
len2 = genome_len - lengths[3] + lengths[2]
eff_len = min(len1, len2) + 1
return(eff_len)
}
vv <- Vectorize(get_eff_len2, vectorize.args=c('a', 'b', 'c', 'd', 'e'))
args = commandArgs(trailingOnly=TRUE)
R1_file = args[[1]]
R2_file = args[[2]]
outfile = args[[3]]
taxid_file = args[[4]]
taxid_lengths = fread(taxid_file)
taxid_lengths$taxid<- as.character(taxid_lengths$taxid)
R1 = fread(R1_file, col.names = c('qseqid', 'sseqid_R1', 'pident_R1', 'length_R1', 'mismatch_R1', 'gapopen_R1', 'qstart_R1', 'qend_R1', 'sstart_R1', 'send_R1', 'evalue_R1', 'bitscore_R1', 'qlen_R1', 'strand', 'taxid'))
R2 = fread(R2_file, col.names = c('qseqid', 'sseqid_R2', 'pident_R2', 'length_R2', 'mismatch_R2', 'gapopen_R2', 'qstart_R2', 'qend_R2', 'sstart_R2', 'send_R2', 'evalue_R2', 'bitscore_R2', 'qlen_R2', 'strand', 'taxid'))
R1 = R1[R1$length_R1/R1$qlen_R1 >=0.9, ]
R2 = R2[R2$length_R2/R2$qlen_R2 >=0.9, ]
R1 = R1[R1$taxid != "GI_NOT_FOUND", ]
R2 = R2[R2$taxid != "GI_NOT_FOUND", ]
R1$taxid = as.character(R1$taxid)
R2$taxid = as.character(R2$taxid)
R1$qseqid = gsub("_.*", "", R1$qseqid)
R2$qseqid = gsub("_.*", "", R2$qseqid)
over_occuring_rows <- merge(data.frame(table(R1$qseqid)),
data.frame(table(R2$qseqid)),
by='Var1')
over_occuring_reads <- as.character(over_occuring_rows$Var1[over_occuring_rows$Freq.x >10000 | over_occuring_rows$Freq.y >10000])
R1 <- R1[!(R1$qseqid %in% over_occuring_reads), ]
R2 <- R2[!(R2$qseqid %in% over_occuring_reads), ]
#start of minor changes we got thiiiiis
#paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid'), allow.cartesian = TRUE)
colnames(R1)[[2]]<-'sseqid'
colnames(R2)[[2]]<-'sseqid'
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid', 'sseqid'), allow.cartesian = TRUE)
# end of minor changes lets get it
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- with(paired, vv(sstart_R1, send_R1, sstart_R2, send_R2, genome_len))
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length), ] #duplicate function will keep the first occurence, which by this definition is
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
Sys.time()-start_time
fwrite(paired, '../../phix006OG')
outfile = '../../phix006OG'
fwrite(x = paired, file = outfile, quote = FALSE, sep='\t', col.names = FALSE, row.names = FALSE, append = TRUE)
colnames(paired)
fwrite(x = paired, file = outfile, quote = FALSE, sep='\t', col.names = FALSE, row.names = FALSE, append = TRUE)
fwrite(x = paired, file = outfile, quote = FALSE, sep='\t', col.names = FALSE, row.names = FALSE, append = TRUE)
taxid_lengths = fread(taxid_file)
taxid_lengths$taxid<- as.character(taxid_lengths$taxid)
R1 = fread(R1_file, col.names = c('qseqid', 'sseqid_R1', 'pident_R1', 'length_R1', 'mismatch_R1', 'gapopen_R1', 'qstart_R1', 'qend_R1', 'sstart_R1', 'send_R1', 'evalue_R1', 'bitscore_R1', 'qlen_R1', 'strand', 'taxid'))
R2 = fread(R2_file, col.names = c('qseqid', 'sseqid_R2', 'pident_R2', 'length_R2', 'mismatch_R2', 'gapopen_R2', 'qstart_R2', 'qend_R2', 'sstart_R2', 'send_R2', 'evalue_R2', 'bitscore_R2', 'qlen_R2', 'strand', 'taxid'))
R1 = R1[R1$length_R1/R1$qlen_R1 >=0.9, ]
R2 = R2[R2$length_R2/R2$qlen_R2 >=0.9, ]
R1 = R1[R1$taxid != "GI_NOT_FOUND", ]
R2 = R2[R2$taxid != "GI_NOT_FOUND", ]
R1$taxid = as.character(R1$taxid)
R2$taxid = as.character(R2$taxid)
R1$qseqid = gsub("_.*", "", R1$qseqid)
R2$qseqid = gsub("_.*", "", R2$qseqid)
over_occuring_rows <- merge(data.frame(table(R1$qseqid)),
data.frame(table(R2$qseqid)),
by='Var1')
over_occuring_reads <- as.character(over_occuring_rows$Var1[over_occuring_rows$Freq.x >10000 | over_occuring_rows$Freq.y >10000])
R1 <- R1[!(R1$qseqid %in% over_occuring_reads), ]
R2 <- R2[!(R2$qseqid %in% over_occuring_reads), ]
#start of minor changes we got thiiiiis
#paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid'), allow.cartesian = TRUE)
colnames(R1)[[2]]<-'sseqid'
colnames(R2)[[2]]<-'sseqid'
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid', 'sseqid'), allow.cartesian = TRUE)
# end of minor changes lets get it
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- with(paired, vv(sstart_R1, send_R1, sstart_R2, send_R2, genome_len))
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length, paired$strand, paired$sseqid, paired$pident_R1,
paired$length_R1, paired$mismatch_R1, paired$gapopen_R1, paired$qstart_R1, paired$qstart_R2,
paired$qend_R1, paired$sstart_R1, paired$send_R1, paired$evalue_R1, paired$bitscore_R1, paired$qlen_R1,
paired$pident_R2,
paired$length_R2, paired$mismatch_R2, paired$gapopen_R2, paired$qstart_R2, paired$qstart_R2,
paired$qend_R2, paired$sstart_R2, paired$send_R2, paired$evalue_R2, paired$bitscore_R2, paired$qlen_R2,
), ] #duplicate function will keep the first occurence, which by this definition is
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid', 'sseqid'), allow.cartesian = TRUE)
# end of minor changes lets get it
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- with(paired, vv(sstart_R1, send_R1, sstart_R2, send_R2, genome_len))
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length, paired$strand, paired$sseqid, paired$pident_R1,
paired$length_R1, paired$mismatch_R1, paired$gapopen_R1, paired$qstart_R1, paired$qstart_R2,
paired$qend_R1, paired$sstart_R1, paired$send_R1, paired$evalue_R1, paired$bitscore_R1, paired$qlen_R1,
paired$pident_R2,
paired$length_R2, paired$mismatch_R2, paired$gapopen_R2, paired$qstart_R2, paired$qstart_R2,
paired$qend_R2, paired$sstart_R2, paired$send_R2, paired$evalue_R2, paired$bitscore_R2, paired$qlen_R2
), ] #duplicate function will keep the first occurence, which by this definition is
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
fwrite(x = paired, file = outfile, quote = FALSE, sep='\t', col.names = FALSE, row.names = FALSE, append = FALSE)
taxid_lengths = fread(taxid_file)
library(data.table)
get_eff_len2 <- function(a, b, c, d, e){
a = as.numeric(a)
b = as.numeric(b)
c = as.numeric(c)
d = as.numeric(d)
genome_len = as.numeric(e)
lengths = sort(c(a,b,c,d))
len1 = lengths[4]-lengths[1]
len2 = genome_len - lengths[3] + lengths[2]
eff_len = min(len1, len2) + 1
return(eff_len)
}
vv <- Vectorize(get_eff_len2, vectorize.args=c('a', 'b', 'c', 'd', 'e'))
taxid_file <- '../../databases/GenomeDB/taxids_lengths.txt'
taxid_lengths = fread(taxid_file)
READIDS <- fread('../../3o9FU6nuFXphix006tmptmp/READIDS')
library(data.table)
library(parallel)
get_eff_len2 <- function(a, b, c, d, e){
a = as.numeric(a)
b = as.numeric(b)
c = as.numeric(c)
d = as.numeric(d)
genome_len = as.numeric(e)
lengths = sort(c(a,b,c,d))
len1 = lengths[4]-lengths[1]
len2 = genome_len - lengths[3] + lengths[2]
eff_len = min(len1, len2) + 1
return(eff_len)
}
vv <- Vectorize(get_eff_len2, vectorize.args=c('a', 'b', 'c', 'd', 'e'))
taxid_file <- '../../databases/GenomeDB/taxids_lengths.txt'
taxid_lengths = fread(taxid_file)
READIDS <- fread('../../3o9FU6nuFXphix006tmptmp/READIDS', header=FALSE)
do_it <- function(read_id, taxid_lengths){
taxid_lengths$taxid<- as.character(taxid_lengths$taxid)
R1_file = paste0("/programs/sorted_grep-1.0/sgrep ", read_id, " ../../3o9FU6nuFXphix006tmptmp/phix006tmp.R1.outfmt6.sorted")
R2_file = paste0("/programs/sorted_grep-1.0/sgrep ", read_id, " ../../3o9FU6nuFXphix006tmptmp/phix006tmp.R2.outfmt6.sorted")
R1 = fread(R1_file, col.names = c('qseqid', 'sseqid_R1', 'pident_R1', 'length_R1', 'mismatch_R1', 'gapopen_R1', 'qstart_R1', 'qend_R1', 'sstart_R1', 'send_R1', 'evalue_R1', 'bitscore_R1', 'qlen_R1', 'strand', 'taxid'))
R2 = fread(R2_file, col.names = c('qseqid', 'sseqid_R2', 'pident_R2', 'length_R2', 'mismatch_R2', 'gapopen_R2', 'qstart_R2', 'qend_R2', 'sstart_R2', 'send_R2', 'evalue_R2', 'bitscore_R2', 'qlen_R2', 'strand', 'taxid'))
R1 = R1[R1$length_R1/R1$qlen_R1 >=0.9, ]
R2 = R2[R2$length_R2/R2$qlen_R2 >=0.9, ]
R1 = R1[R1$taxid != "GI_NOT_FOUND", ]
R2 = R2[R2$taxid != "GI_NOT_FOUND", ]
R1$taxid = as.character(R1$taxid)
R2$taxid = as.character(R2$taxid)
R1$qseqid = gsub("_.*", "", R1$qseqid)
R2$qseqid = gsub("_.*", "", R2$qseqid)
over_occuring_rows <- merge(data.frame(table(R1$qseqid)),
data.frame(table(R2$qseqid)),
by='Var1')
over_occuring_reads <- as.character(over_occuring_rows$Var1[over_occuring_rows$Freq.x >10000 | over_occuring_rows$Freq.y >10000])
R1 <- R1[!(R1$qseqid %in% over_occuring_reads), ]
R2 <- R2[!(R2$qseqid %in% over_occuring_reads), ]
#start of minor changes we got thiiiiis
#paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid'), allow.cartesian = TRUE)
colnames(R1)[[2]]<-'sseqid'
colnames(R2)[[2]]<-'sseqid'
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid', 'sseqid'), allow.cartesian = TRUE)
# end of minor changes lets get it
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- with(paired, vv(sstart_R1, send_R1, sstart_R2, send_R2, genome_len))
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length, paired$strand, paired$sseqid, paired$pident_R1,
paired$length_R1, paired$mismatch_R1, paired$gapopen_R1, paired$qstart_R1, paired$qstart_R2,
paired$qend_R1, paired$sstart_R1, paired$send_R1, paired$evalue_R1, paired$bitscore_R1, paired$qlen_R1,
paired$pident_R2,
paired$length_R2, paired$mismatch_R2, paired$gapopen_R2, paired$qstart_R2, paired$qstart_R2,
paired$qend_R2, paired$sstart_R2, paired$send_R2, paired$evalue_R2, paired$bitscore_R2, paired$qlen_R2
), ] #duplicate function will keep the first occurence, which by this definition is
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
outfile = paste0(read_id, '.final')
fwrite(x = paired, file = outfile, quote = FALSE, sep='\t', col.names = FALSE, row.names = FALSE, append = FALSE)
}
mclapply(X=READIDS$V1, FUN=do_it, mc.cores=50, taxid_lengths)
do_it2 <-function(read_id, taxid_lengths){
try(do_it(read_id, taxid_lengths), silent=TRUE)
}
mclapply(X=READIDS$V1, FUN=do_it2, mc.cores=50, taxid_lengths)
start = Sys.time()
mclapply(X=READIDS$V1, FUN=do_it2, mc.cores=50, taxid_lengths)
Sys.time()-start
start = Sys.time()
mclapply(X=READIDS$V1, FUN=do_it2, mc.cores=25, taxid_lengths)
Sys.time()-start
library(data.table)
get_eff_len2 <- function(a, b, c, d, e){
a = as.numeric(a)
b = as.numeric(b)
c = as.numeric(c)
d = as.numeric(d)
genome_len = as.numeric(e)
lengths = sort(c(a,b,c,d))
len1 = lengths[4]-lengths[1]
len2 = genome_len - lengths[3] + lengths[2]
eff_len = min(len1, len2) + 1
return(eff_len)
}
vv <- Vectorize(get_eff_len2, vectorize.args=c('a', 'b', 'c', 'd', 'e'))
args = commandArgs(trailingOnly=TRUE)
R1_file <- '../../sample_output/blast/CT_genome/R1/phix006.R1.outfmt6.gz'
R2_file <- '../../sample_output/blast/CT_genome/R2/phix006.R2.outfmt6.gz'
outfile <- '../../phix006OG'
taxid_file = '../../databases/GenomeDB/taxids_lengths.txt'
taxid_lengths = fread(taxid_file)
taxid_lengths$taxid<- as.character(taxid_lengths$taxid)
R1 = fread(R1_file, col.names = c('qseqid', 'sseqid_R1', 'pident_R1', 'length_R1', 'mismatch_R1', 'gapopen_R1', 'qstart_R1', 'qend_R1', 'sstart_R1', 'send_R1', 'evalue_R1', 'bitscore_R1', 'qlen_R1', 'strand', 'taxid'))
R2 = fread(R2_file, col.names = c('qseqid', 'sseqid_R2', 'pident_R2', 'length_R2', 'mismatch_R2', 'gapopen_R2', 'qstart_R2', 'qend_R2', 'sstart_R2', 'send_R2', 'evalue_R2', 'bitscore_R2', 'qlen_R2', 'strand', 'taxid'))
R1 = R1[R1$length_R1/R1$qlen_R1 >=0.9, ]
R2 = R2[R2$length_R2/R2$qlen_R2 >=0.9, ]
R1 = R1[R1$taxid != "GI_NOT_FOUND", ]
R2 = R2[R2$taxid != "GI_NOT_FOUND", ]
R1$taxid = as.character(R1$taxid)
R2$taxid = as.character(R2$taxid)
R1$qseqid = gsub("_.*", "", R1$qseqid)
R2$qseqid = gsub("_.*", "", R2$qseqid)
over_occuring_rows <- merge(data.frame(table(R1$qseqid)),
data.frame(table(R2$qseqid)),
by='Var1')
over_occuring_reads <- as.character(over_occuring_rows$Var1[over_occuring_rows$Freq.x >10000 | over_occuring_rows$Freq.y >10000])
R1 <- R1[!(R1$qseqid %in% over_occuring_reads), ]
R2 <- R2[!(R2$qseqid %in% over_occuring_reads), ]
colnames(R1)[[2]]<-'sseqid'
colnames(R2)[[2]]<-'sseqid'
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid', 'sseqid'), allow.cartesian = TRUE)
# end of minor changes lets get it
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- with(paired, vv(sstart_R1, send_R1, sstart_R2, send_R2, genome_len))
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length, paired$strand, paired$sseqid, paired$pident_R1,
paired$length_R1, paired$mismatch_R1, paired$gapopen_R1, paired$qstart_R1, paired$qstart_R2,
paired$qend_R1, paired$sstart_R1, paired$send_R1, paired$evalue_R1, paired$bitscore_R1, paired$qlen_R1,
paired$pident_R2,
paired$length_R2, paired$mismatch_R2, paired$gapopen_R2, paired$qstart_R2, paired$qstart_R2,
paired$qend_R2, paired$sstart_R2, paired$send_R2, paired$evalue_R2, paired$bitscore_R2, paired$qlen_R2
), ] #duplicate function will keep the first occurence, which by this definition is
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
fwrite(x = paired, file = outfile, quote = FALSE, sep='\t', col.names = FALSE, row.names = FALSE, append = FALSE)
library(data.table)
get_eff_len2 <- function(a, b, c, d, e){
a = as.numeric(a)
b = as.numeric(b)
c = as.numeric(c)
d = as.numeric(d)
genome_len = as.numeric(e)
lengths = sort(c(a,b,c,d))
len1 = lengths[4]-lengths[1]
len2 = genome_len - lengths[3] + lengths[2]
eff_len = min(len1, len2) + 1
return(eff_len)
}
vv <- Vectorize(get_eff_len2, vectorize.args=c('a', 'b', 'c', 'd', 'e'))
args = commandArgs(trailingOnly=TRUE)
R1_file = '/workdir/apc88/WGBS_pipeline/sample_output/blast/GA_genome/R1/MET-1-38.R1.outfmt6.gz'
R1_file = '/workdir/apc88/WGBS_pipeline/sample_output/blast/GA_genome/R2/MET-1-38.R2.outfmt6.gz'
R1_file = '/workdir/apc88/WGBS_pipeline/sample_output/blast/GA_genome/R1/MET-1-38.R1.outfmt6.gz'
R2_file = '/workdir/apc88/WGBS_pipeline/sample_output/blast/GA_genome/R2/MET-1-38.R2.outfmt6.gz'
taxid_file = '/workdir/apc88/WGBS_pipeline/databases/GenomeDB/taxids_lengths.txt'
taxid_lengths = fread(taxid_file)
taxid_lengths$taxid<- as.character(taxid_lengths$taxid)
R1 = fread(R1_file, col.names = c('qseqid', 'sseqid_R1', 'pident_R1', 'length_R1', 'mismatch_R1', 'gapopen_R1', 'qstart_R1', 'qend_R1', 'sstart_R1', 'send_R1', 'evalue_R1', 'bitscore_R1', 'qlen_R1', 'strand', 'taxid'))
R2 = fread(R2_file, col.names = c('qseqid', 'sseqid_R2', 'pident_R2', 'length_R2', 'mismatch_R2', 'gapopen_R2', 'qstart_R2', 'qend_R2', 'sstart_R2', 'send_R2', 'evalue_R2', 'bitscore_R2', 'qlen_R2', 'strand', 'taxid'))
R1 = R1[R1$length_R1/R1$qlen_R1 >=0.9, ]
R2 = R2[R2$length_R2/R2$qlen_R2 >=0.9, ]
R1 = R1[R1$taxid != "GI_NOT_FOUND", ]
R2 = R2[R2$taxid != "GI_NOT_FOUND", ]
R1$taxid = as.character(R1$taxid)
R2$taxid = as.character(R2$taxid)
R1$qseqid = gsub("_.*", "", R1$qseqid)
R2$qseqid = gsub("_.*", "", R2$qseqid)
over_occuring_rows <- merge(data.frame(table(R1$qseqid)),
data.frame(table(R2$qseqid)),
by='Var1')
over_occuring_reads <- as.character(over_occuring_rows$Var1[over_occuring_rows$Freq.x >10000 | over_occuring_rows$Freq.y >10000])
R1 <- R1[!(R1$qseqid %in% over_occuring_reads), ]
R2 <- R2[!(R2$qseqid %in% over_occuring_reads), ]
colnames(R1)[[2]]<-'sseqid'
colnames(R2)[[2]]<-'sseqid'
paired = merge(R1, R2, by=c('qseqid', 'strand', 'taxid', 'sseqid'), allow.cartesian = TRUE)
# end of minor changes lets get it
paired = merge(paired, taxid_lengths, by='taxid')
paired$effective_length <- with(paired, vv(sstart_R1, send_R1, sstart_R2, send_R2, genome_len))
paired = paired[paired$effective_length<1000, ]
paired = paired[order(paired$qseqid, paired$effective_length, paired$strand, paired$sseqid, paired$pident_R1,
paired$length_R1, paired$mismatch_R1, paired$gapopen_R1, paired$qstart_R1, paired$qstart_R2,
paired$qend_R1, paired$sstart_R1, paired$send_R1, paired$evalue_R1, paired$bitscore_R1, paired$qlen_R1,
paired$pident_R2,
paired$length_R2, paired$mismatch_R2, paired$gapopen_R2, paired$qstart_R2, paired$qstart_R2,
paired$qend_R2, paired$sstart_R2, paired$send_R2, paired$evalue_R2, paired$bitscore_R2, paired$qlen_R2
), ] #duplicate function will keep the first occurence, which by this definition is
# also the shortest
to_keep = !duplicated(paired$qseqid)
paired = paired[to_keep, ]
